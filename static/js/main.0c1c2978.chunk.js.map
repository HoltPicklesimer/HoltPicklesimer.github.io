{"version":3,"sources":["assets/images/careSource.png","assets/images/unity.png","assets/images/megaDesk.png","assets/images/scripture.PNG","assets/images/profile.jpg","assets/images/megadesk2.PNG","components/Footer.js","components/Hero.js","components/CardInfo.js","components/Card.js","components/Carousel.js","pages/HomePage.js","components/Content.js","pages/AboutPage.js","pages/ContactPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Footer","className","Container","fluid","Row","Col","md","sm","href","target","Hero","props","Jumbotron","img","Image","src","fuid","roundedCircle","width","height","style","padding","title","subTitle","text","CardInfo","useSpring","opacity","from","div","link","rel","content","Card","onClick","e","click","item","imgSrc","alt","selected","Carousel","handleCardClick","id","card","items","state","forEach","setState","makeItems","map","key","careSource","unity","megaDesk","scripture","this","React","Component","HomePage","Content","children","AboutPage","ContactPage","handleChange","event","value","type","checked","name","handleSubmit","disabled","emailjs","sendForm","then","res","emailSent","err","console","log","checkVerified","bind","verifyCallback","expireCallback","from_name","from_email","message","isVerified","alert","preventDefault","response","Form","onSubmit","Group","Label","htmlFor","Control","onChange","as","rows","siteKey","onVerify","onExpire","Button","variant","App","headerLinks","path","home","about","contact","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","to","exact","render","profile","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.0c1c2978.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/careSource.9e82e110.png\";","module.exports = __webpack_public_path__ + \"static/media/unity.7a9bd577.png\";","module.exports = __webpack_public_path__ + \"static/media/megaDesk.1287d0c0.png\";","module.exports = __webpack_public_path__ + \"static/media/scripture.15d8ae56.PNG\";","module.exports = __webpack_public_path__ + \"static/media/profile.7f6a8dc2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/megadesk2.84b1bded.PNG\";","import React from 'react'\r\nimport { Container, Col, Row } from 'react-bootstrap'\r\n\r\nfunction Footer() {\r\n\r\n    return(\r\n        <footer className=\"mt-5\">\r\n            <Container fluid={true}>\r\n                <Row className=\"border-top justify-content-between p-3\">\r\n                    <Col className=\"p-0\" md={8} sm={12}>\r\n                        Holt Picklesimer - <a href='https://github.com/HoltPicklesimer' target=\"_blank\">GitHub</a> - <a href='https://www.linkedin.com/in/holt-picklesimer' target=\"_blank\">LinkedIn</a>\r\n                    </Col>\r\n                    <Col className=\"p-0 d-flex justify-content-end\" md={4}>\r\n                        Copyright Â© 2020 - Ethan Picklesimer, All Rights Reserved.\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    );\r\n\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Image from 'react-bootstrap/Image';\r\n\r\n\r\nfunction Hero(props) {\r\n    return(\r\n        <Jumbotron className=\"bg-transparent jumbotron-fluid p-0\">\r\n            <Container fluid={true}>\r\n                <Row className=\"justify-content-center py-5\">\r\n                    <Col md={1.5} sm={1.5}>\r\n                        { props.img && <Image src={props.img} fuid={true} roundedCircle={true} width={150} height={150} style={{padding:\"10px\"}} />}\r\n                    </Col>\r\n                    <Col md={10.5} sm={10.5}>\r\n                        { props.title && <h1 className=\"display-1 font-weight-bolder\">{props.title}</h1>}\r\n                        { props.subTitle && <h3 className=\"display-4 font-weight-light\">{props.subTitle}</h3>}\r\n                        { props.text && <h3 className=\"lead font-weight-light\">{props.text}</h3>}\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Jumbotron>\r\n    );\r\n}\r\n\r\nexport default Hero;","import React from 'react';\r\nimport { useSpring, animated } from 'react-spring';\r\n\r\nfunction CardInfo(props) {\r\n\r\n    const style = useSpring({opacity: 1, from: {opacity: 0}});\r\n\r\n    return(\r\n        <animated.div className=\"item-card-info\" style={style}>\r\n            <p className=\"item-card-title\">{props.title}</p>\r\n            <p className=\"item-card-sub-title\">{props.subTitle}</p>\r\n            { props.link && <a className=\"item-card-sm-text\" href={props.link} target=\"_blank\" rel=\"noopener noreferrer\" >View</a>}\r\n            <p className=\"item-card-sm-text\">{props.content}</p>\r\n        </animated.div>\r\n    );\r\n}\r\n\r\nexport default CardInfo;","import React from 'react';\r\n\r\nimport CardInfo from '../components/CardInfo';\r\n\r\nfunction Card(props) {\r\n    return(\r\n        <div className=\"d-inline-block item-card\" onClick={(e) => props.click(props.item)}>\r\n            <img className=\"item-card-image\" src={props.item.imgSrc} alt={props.item.imgSrc} />\r\n            { props.item.selected && <CardInfo title={props.item.title} subTitle={props.item.subTitle} link={props.item.link} content={props.item.content} />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nimport Card from '../components/Card';\r\n\r\nimport careSource from '../assets/images/careSource.png';\r\nimport unity from '../assets/images/unity.png';\r\nimport megaDesk from '../assets/images/megaDesk.png';\r\nimport scripture from '../assets/images/scripture.PNG';\r\nimport megaDesk2 from '../assets/images/megadesk2.PNG';\r\nimport { Container } from 'react-bootstrap';\r\n\r\nclass Carousel extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: [\r\n                {\r\n                    id: 0,\r\n                    title: 'CareSource',\r\n                    subTitle: 'Full-Time Internship',\r\n                    imgSrc: careSource,\r\n                    selected: false,\r\n                    content: \"While working at CareSource for the past year and a half, I worked on internal tools and bugfixes for the Enrollment team that handles incoming member records.\" +\r\n                    \"One project I have worked on was the Enrollment Engine Regression Testing Tool. I am the lead contributor for this tool that verifies the Enrollment Engine still works \" +\r\n                    \"after integrating a change into the Enrollment Engine. This tool saves the Enrollment Team hundreds of hours a month in quality assurance work and has been used as a \" +\r\n                    \"model for other regression tools in the company. I also created a dynamic mapping table to store component mappings and a configurations management UI to allow for easy \" +\r\n                    \"creation and modification for Enrollment Team configurations for use of compliance management software.\"\r\n                },\r\n                {\r\n                    id: 1,\r\n                    title: 'Unity Game Development',\r\n                    subTitle: 'Object-Oriented Programming in C#',\r\n                    imgSrc: unity,\r\n                    link: 'https://github.com/HoltPicklesimer/Unity-Space-Game',\r\n                    selected: false,\r\n                    content: \"In my spare time, I enjoy creating games and learning game design in Unity. I often find new techniques to use in my professional work when I research solutions \" +\r\n                    \"to my games. I created this 3D space shooter in a week during my spare time. I used 3D models from Star Wars, so unfortunately I cannot put all of the project on GitHub; \" +\r\n                    \"however, the code is posted. In this program, I demonstrate object pooling using a custom object pooling class. Object pooling can help provide easy access to resources \" +\r\n                    \"when it would otherwise be too costly. Please check out my other projects on GitHub: https://github.com/HoltPicklesimer where you can find the source code to my web \" +\r\n                    \"applications and a gender classifier developed using the Keras and TensorFlow libraries.\"\r\n                },\r\n                {\r\n                    id: 2,\r\n                    title: 'MegaDesk Application',\r\n                    subTitle: 'A .NET Framework Desktop Application',\r\n                    imgSrc: megaDesk,\r\n                    link: 'https://github.com/HoltPicklesimer/MegaDesk-Picklesimer',\r\n                    selected: false,\r\n                    content: \"This is a windows forms desktop application I created in collaboration with another teammate. The application is used to create and store price quotes for a fictional desk \" +\r\n                    \"manufacturing company. Desk and quote specs are stored in a local file and can be viewed and filtered by surface material. C# and .NET were used to implement the functionality behind \" +\r\n                    \"the windows forms.\"\r\n                },\r\n                {\r\n                    id: 3,\r\n                    title: 'My Scripture Journal Application',\r\n                    subTitle: 'A .NET Core Web Application',\r\n                    imgSrc: scripture,\r\n                    link: 'https://github.com/HoltPicklesimer/MyScriptureJournal',\r\n                    selected: false,\r\n                    content: \"This is a web application I created using Razor Web Pages and .NET Core. The application stores a user's scripture journal entries and the user can perform CRUD operations using \" +\r\n                    \"the different pages. The entries are stored in a local database.\"\r\n                },\r\n                // {\r\n                //     id: 4,\r\n                //     title: 'MegaDesk Application',\r\n                //     subTitle: 'A .NET Core Web Application',\r\n                //     imgSrc: megaDesk2,\r\n                //     link: 'https://github.com/HoltPicklesimer/MegaDesk',\r\n                //     selected: false,\r\n                //     content: \"This is the same MegaDesk application, but in a Web form. I created this application in collaboration with the same teammate. We used Razor Web pages and .NET Core when creating \" +\r\n                //     \"the web pages.\"\r\n                // },\r\n            ]\r\n        };\r\n    }\r\n\r\n    handleCardClick = (id, card) => {\r\n\r\n        let items = [...this.state.items];\r\n\r\n        items[id].selected = items[id].selected ? false : true;\r\n\r\n        items.forEach(item => {\r\n            if(item.id !== id) {\r\n                item.selected = false;\r\n            }\r\n        });\r\n\r\n        this.setState({\r\n            items\r\n        });\r\n    }\r\n\r\n    makeItems = (items) => {\r\n        return items.map(item => {\r\n            return <Card item={item} click={(e => this.handleCardClick(item.id, e))} key={item.id} />\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container fluid={true}>\r\n                <Row className=\"justify-content-around\">\r\n                    {this.makeItems(this.state.items)}\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default Carousel;","import React from 'react';\r\nimport Hero from '../components/Hero'\r\nimport Carousel from '../components/Carousel';\r\n\r\n\r\nfunction HomePage(props) {\r\n    return(\r\n        <div>\r\n            <Hero title={props.title} subTitle={props.subTitle} text={props.text} img={props.img}/>\r\n            <Carousel/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nfunction Content(props) {\r\n\r\n    return(\r\n        <Container fluid={true}>\r\n            <Row className=\"justify-content-center\">\r\n                <Col md={8}>\r\n                    {props.children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Content;","import React from 'react';\r\n\r\nimport Hero from '../components/Hero';\r\nimport Content from '../components/Content';\r\n\r\nfunction AboutPage(props) {\r\n    return(\r\n        <div>\r\n            <Hero title={props.title}></Hero>\r\n\r\n            <Content>\r\n                <p>Hello, my name is Ethan (Holt) Picklesimer. I am a software engineering major at BYU-Idaho, graduating in April 2021. I have experience in C#, .NET, SQL, HTML, CSS, JavaScript, jQuery, PHP, Node.js, C++, C, Java, and Python. I have done work in R and Erlang, and I developed this website using React.</p>\r\n                <p>I have worked as an application development intern on the Enrollment Application Development Team at CareSource, a healthcare company located in Dayton, OH, since May of 2019. While finishing my Bachelor's degree, they have allowed me to work part-time remotely while in school and full-time when I am off-track. During my time at CareSource, I have had the opportunity to work in a Scrum team and learn how to do many of the process of Agile, including writing user stories and design documents, participating in sprint plannings, retrospectives, and reviews. I am the main contributor of the Enrollment Engine Regression Testing Tool, which is used to verify existing code does not break when changes are made to the Enrollment Engine code and has been used as a model for other regression tools in the company. While working on the regression tool, I used .NET Framework, Razor webpages, SQL, Javascript and jQuery to create mock data to test the Enrollment Engine. Besides the regression testing tool, I have created a dynamic mapping table to store mappings, as well as a UI for a configuration management system to allow for easy access creating and modifying compliance items.</p>\r\n                <p>In my school projects, I was the lead program architect for the development of a scheduling and budgeting Android app. I am currently working on a new and completely redone version of this app since it has been taken off GitHub by one of my teammates and I wanted to make a polished version to put on the app store. I also had the chance to work in another group with two other teammates to develop a <a href=\"https://github.com/HoltPicklesimer/Gender-Classification\" target=\"_blank\">neural network gender classifier</a>. I led the research for this project to test different layers in a neural network using the Keras and TensorFlow Python libraries. I also developed an image sorting program to prepare the data before classification since it was sorted by name rather than by gender. The program uses the labels file provided by the dataset to sort each image into either a male or female folder. The dataset used was the <a href=\"http://vis-www.cs.umass.edu/lfw/\" target=\"_blank\">Labeled Faces in the Wild</a> dataset, which contains more than 13,000 images. I collaborated with over twenty other teammates to write a <a href=\"https://github.com/HoltPicklesimer/Grad-Planner-Registration-Integration-Software-Requirements-Specification\" target=\"_blank\">software requirements specification</a> and <a href=\"https://github.com/HoltPicklesimer/Grad-Planner-Registration-Integration-Software-Design-Description\" target=\"_blank\">software design description</a> for an integrated graduation planner and class registration system. I also collaborated in another twenty student team to write a <a href=\"https://github.com/HoltPicklesimer/Mobile-Dating-App-Specification\" target=\"_blank\">software design description</a> for a mobile dating app. I have also worked on a few different <a href=\"https://mighty-gorge-68223.herokuapp.com/Home/assigns.php\" target=\"_blank\">web apps</a> using PHP and Node.js</p>\r\n                <p>I am currently a member of the ACM Society and CIT Society at BYU-I. In the ACM Society, we are developing a Unity game in which you control a cannon on an orbiting moon called Artemis which you can check out <a href=\"https://github.com/byuiacm/Artemis\" target=\"_blank\">here</a>. In the CIT society, I am on a team that is working on developing a quiz engine that will allow users to create and take quizzes similar to Canvas or other quiz engines. The quiz engine is being developed with Vue.js and you can check it out <a href=\"https://github.com/BYUI-CIT-Internship/QuizEngine\" target=\"_blank\">here</a>.</p>\r\n                <p>Please check out my <a href=\"https://github.com/HoltPicklesimer\" target=\"_blank\">GitHub</a> page and <a href=\"https://www.linkedin.com/in/holt-picklesimer\" target=\"_blank\">LinkedIn</a>, or contact me using the contact page on this site, at holtpicklesimer@gmail.com, or 234-281-6994.</p>\r\n            </Content>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AboutPage;","import React from 'react';\r\nimport emailjs from 'emailjs-com';\r\nimport Recaptcha from 'react-recaptcha-that-works';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport Hero from '../components/Hero';\r\nimport Content from '../components/Content';\r\n\r\nclass ContactPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // Different binding method, both are valid\r\n        this.checkVerified = this.checkVerified.bind(this);\r\n        this.verifyCallback = this.verifyCallback.bind(this);\r\n        this.expireCallback = this.expireCallback.bind(this);\r\n\r\n        this.state = {\r\n            from_name: '',\r\n            from_email: '',\r\n            message: '',\r\n            disabled: false,\r\n            emailSent: null,\r\n            isVerified: false\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const target = event.target;\r\n        const value = target.type ==='checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n\r\n        this.setState({\r\n            disabled: true\r\n        });\r\n\r\n        emailjs.sendForm('gmail', 'portfolio', event.target, 'user_qKi3RpI6gqF7Y7UDjciy6')\r\n        .then((res) => {\r\n            if (res) {\r\n                this.setState({\r\n                    disabled: true,\r\n                    emailSent: true\r\n                });\r\n            }\r\n            else {\r\n                this.setState({\r\n                    disabled: true,\r\n                    emailSent: false\r\n                });\r\n            }\r\n        }, (err) => {\r\n            console.log(err);\r\n\r\n            this.setState({\r\n                disabled: true,\r\n                emailSent: false\r\n            });\r\n        });\r\n    }\r\n\r\n    expireCallback() {\r\n        alert(\"Captcha verification expired. Please re-verify.\");\r\n    }\r\n\r\n    checkVerified(event) {\r\n        event.preventDefault();\r\n        \r\n        if (this.state.isVerified) {\r\n            this.handleSubmit(event);\r\n        }\r\n        else {\r\n            alert(\"Please verify the recaptcha before submitting.\");\r\n        }\r\n    }\r\n\r\n    verifyCallback(response) {\r\n        if (response) {\r\n            this.setState({isVerified:true});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Hero title={this.props.title} />\r\n\r\n                <Content>\r\n                    <Form onSubmit={this.checkVerified}>\r\n                        <Form.Group>\r\n                            <Form.Label htmlFor=\"full-name\">Full Name</Form.Label>\r\n                            <Form.Control id=\"full-name\" name=\"from_name\" type=\"text\" value={this.state.from_name} onChange={this.handleChange} />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                            <Form.Label htmlFor=\"email\">Email</Form.Label>\r\n                            <Form.Control id=\"email\" name=\"from_email\" type=\"email\" value={this.state.from_email} onChange={this.handleChange} />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                            <Form.Label htmlFor=\"message\">Message</Form.Label>\r\n                            <Form.Control id=\"message\" name=\"message\" as=\"textarea\" rows=\"3\" value={this.state.message} onChange={this.handleChange} />\r\n                        </Form.Group>\r\n\r\n                        <Recaptcha className=\"recaptcha\"\r\n                            siteKey=\"6LcvCdMZAAAAADt8iHKTJY-0ikSHIKrtC-UbyKbj\"\r\n                            onVerify={this.verifyCallback}\r\n                            onExpire={this.expireCallback}\r\n                        />\r\n                        <br/>\r\n\r\n                        <Button className=\"d-inline-block\" variant=\"primary\" type=\"submit\" disabled={this.state.disabled}>\r\n                            Send\r\n                        </Button>\r\n\r\n                        {this.state.emailSent === true && <p className=\"d-inline success-msg\">Email Sent</p>}\r\n                        {this.state.emailSent === false && <p className=\"d-inline err-msg\">Email Not Sent</p>}\r\n                    </Form>\r\n                </Content>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ContactPage;","import React from 'react';\nimport {BrowserRouter as Router, Route, Link} from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport './App.css';\n\nimport Footer from './components/Footer';\nimport HomePage from './pages/HomePage';\nimport AboutPage from './pages/AboutPage';\nimport ContactPage from './pages/ContactPage';\n\nimport profile from './assets/images/profile.jpg';\n\nclass App extends React.Component {\n\n  constructor (props) {\n    super(props)\n    this.state = {\n      title: 'Holt Picklesimer',\n      headerLinks: [\n        { title: 'Home', path: '/' },\n        { title: 'About', path: '/about' },\n        { title: 'Contact', path: '/contact' }\n      ],\n      home: {\n        title: 'Holt Picklesimer',\n        subTitle: 'Software Engineering BS',\n        text: 'Checkout my projects below.',\n      },\n      about: {\n        title: 'About Me',\n        subTitle: 'Software Engineering BS',\n        text: 'Checkout my projects below.',\n      },\n      contact: {\n        title: 'Let\\'s Talk'\n      }\n    }\n  }\n\n  render(){\n    return (\n      <Router>\n        <Container className=\"p-0\" fluid={true}>\n\n          <Navbar className=\"border-bottom\" bg=\"transparent\" expand=\"lg\">\n            <Navbar.Brand>Holt Picklesimer</Navbar.Brand>\n\n            <Navbar.Toggle className=\"border-0\" aria-controls=\"navbar-toggle\" />\n            <Navbar.Collapse id=\"navbar-toggle\">\n              <Nav className=\"ml-auto\">\n                <Link className=\"nav-link\" to=\"/portfolio\">Home</Link>\n                <Link className=\"nav-link\" to=\"/About\">About</Link>\n                <Link className=\"nav-link\" to=\"/Contact\">Contact</Link>\n              </Nav>\n            </Navbar.Collapse>\n          </Navbar>\n\n          <Route path=\"/portfolio\" exact render={() => <HomePage title={this.state.home.title} subTitle={this.state.home.subTitle} text={this.state.home.text} img={profile} />} />\n          <Route path=\"/About\" render={() => <AboutPage title={this.state.about.title} subTitle={this.state.about.subTitle} text={this.state.about.text} />} />\n          <Route path=\"/Contact\" render={() => <ContactPage title={this.state.contact.title} subTitle={this.state.contact.subTitle} text={this.state.contact.text} />} />\n          <Footer></Footer>\n\n        </Container>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}