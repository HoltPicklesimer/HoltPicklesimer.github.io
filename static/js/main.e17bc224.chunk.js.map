{"version":3,"sources":["assets/images/careSource.png","assets/images/unity.png","assets/images/megaDesk.png","assets/images/scripture.PNG","assets/images/contoso.JPG","assets/images/antTrail.JPG","assets/images/producktivo.png","assets/images/profile.JPG","components/Footer.js","components/Hero.js","components/CardInfo.js","components/Card.js","components/Carousel.js","pages/HomePage.js","components/Content.js","pages/AboutPage.js","pages/ContactPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Footer","className","Container","fluid","Row","Col","md","sm","href","target","Hero","props","Jumbotron","img","Image","src","roundedCircle","width","height","style","padding","title","subTitle","text","CardInfo","useSpring","opacity","from","div","link2","rel","link","content","Card","onClick","e","click","item","imgSrc","alt","selected","Carousel","handleCardClick","id","card","items","state","forEach","setState","makeItems","map","key","producktivo","careSource","antTrail","unity","megaDesk","scripture","contoso","this","React","Component","HomePage","Content","children","AboutPage","ContactPage","handleChange","event","value","type","checked","name","handleSubmit","disabled","emailjs","sendForm","then","res","emailSent","err","console","log","checkVerified","bind","verifyCallback","expireCallback","from_name","from_email","message","isVerified","alert","preventDefault","response","Form","onSubmit","Group","Label","htmlFor","Control","onChange","as","rows","siteKey","onVerify","onExpire","Button","variant","App","headerLinks","path","home","about","contact","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","to","exact","render","profile","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.e17bc224.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/careSource.9e82e110.png\";","module.exports = __webpack_public_path__ + \"static/media/unity.7a9bd577.png\";","module.exports = __webpack_public_path__ + \"static/media/megaDesk.1287d0c0.png\";","module.exports = __webpack_public_path__ + \"static/media/scripture.15d8ae56.PNG\";","module.exports = __webpack_public_path__ + \"static/media/contoso.62e09966.JPG\";","module.exports = __webpack_public_path__ + \"static/media/antTrail.a172677f.JPG\";","module.exports = __webpack_public_path__ + \"static/media/producktivo.f9463542.png\";","module.exports = __webpack_public_path__ + \"static/media/profile.6219945e.JPG\";","import React from 'react';\r\nimport { Container, Col, Row } from 'react-bootstrap';\r\n\r\nfunction Footer() {\r\n   return (\r\n      <footer className='mt-5'>\r\n         <Container fluid={true}>\r\n            <Row className='border-top justify-content-between p-3'>\r\n               <Col className='p-0' md={8} sm={12}>\r\n                  Holt Picklesimer -{' '}\r\n                  <a href='https://github.com/HoltPicklesimer' target='_blank'>\r\n                     GitHub\r\n                  </a>{' '}\r\n                  -{' '}\r\n                  <a\r\n                     href='https://www.linkedin.com/in/holt-picklesimer'\r\n                     target='_blank'\r\n                  >\r\n                     LinkedIn\r\n                  </a>\r\n               </Col>\r\n               <Col className='p-0 d-flex justify-content-end' md={4}>\r\n                  Copyright © 2020 - Ethan Picklesimer, All Rights Reserved.\r\n               </Col>\r\n            </Row>\r\n         </Container>\r\n      </footer>\r\n   );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Image from 'react-bootstrap/Image';\r\n\r\nfunction Hero(props) {\r\n   return (\r\n      <Jumbotron className='bg-transparent jumbotron-fluid p-0'>\r\n         <Container fluid={true}>\r\n            <Row className='justify-content-center py-5'>\r\n               <Col md={1.5} sm={1.5}>\r\n                  {props.img && (\r\n                     <Image\r\n                        src={props.img}\r\n                        fluid={true}\r\n                        roundedCircle={true}\r\n                        width={150}\r\n                        height={150}\r\n                        style={{ padding: '10px' }}\r\n                     />\r\n                  )}\r\n               </Col>\r\n               <Col md={10.5} sm={10.5}>\r\n                  {props.title && (\r\n                     <h1 className='display-2 font-weight-bolder'>\r\n                        {props.title}\r\n                     </h1>\r\n                  )}\r\n                  {props.subTitle && (\r\n                     <h3 className='display-4 font-weight-light'>\r\n                        {props.subTitle}\r\n                     </h3>\r\n                  )}\r\n                  {props.text && (\r\n                     <h3 className='lead font-weight-light'>{props.text}</h3>\r\n                  )}\r\n               </Col>\r\n            </Row>\r\n         </Container>\r\n      </Jumbotron>\r\n   );\r\n}\r\n\r\nexport default Hero;\r\n","import React from 'react';\r\nimport { useSpring, animated } from 'react-spring';\r\n\r\nfunction CardInfo(props) {\r\n   const style = useSpring({ opacity: 1, from: { opacity: 0 } });\r\n\r\n   return (\r\n      <animated.div className='item-card-info' style={style}>\r\n         <p className='item-card-title'>{props.title}</p>\r\n         <p className='item-card-sub-title'>{props.subTitle}</p>\r\n         {props.link2 && (\r\n            <span>\r\n               <a\r\n                  className='item-card-sm-text'\r\n                  href={props.link2}\r\n                  target='_blank'\r\n                  rel='noopener noreferrer'\r\n               >\r\n                  Go to Site\r\n               </a>\r\n               <br />\r\n            </span>\r\n         )}\r\n         {props.link && (\r\n            <span>\r\n               <a\r\n                  className='item-card-sm-text'\r\n                  href={props.link}\r\n                  target='_blank'\r\n                  rel='noopener noreferrer'\r\n               >\r\n                  View GitHub\r\n               </a>\r\n               <br />\r\n            </span>\r\n         )}\r\n         <p className='item-card-sm-text'>{props.content}</p>\r\n      </animated.div>\r\n   );\r\n}\r\n\r\nexport default CardInfo;\r\n","import React from 'react';\r\n\r\nimport CardInfo from '../components/CardInfo';\r\n\r\nfunction Card(props) {\r\n   return (\r\n      <div\r\n         className='d-inline-block item-card'\r\n         onClick={(e) => props.click(props.item)}\r\n      >\r\n         <img\r\n            className='item-card-image'\r\n            src={props.item.imgSrc}\r\n            alt={props.item.imgSrc}\r\n         />\r\n         {props.item.selected && (\r\n            <CardInfo\r\n               title={props.item.title}\r\n               subTitle={props.item.subTitle}\r\n               link={props.item.link}\r\n               link2={props.item.link2}\r\n               content={props.item.content}\r\n            />\r\n         )}\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nimport Card from '../components/Card';\r\n\r\nimport careSource from '../assets/images/careSource.png';\r\nimport unity from '../assets/images/unity.png';\r\nimport megaDesk from '../assets/images/megaDesk.png';\r\nimport scripture from '../assets/images/scripture.PNG';\r\nimport contoso from '../assets/images/contoso.JPG';\r\nimport antTrail from '../assets/images/antTrail.JPG';\r\nimport producktivo from '../assets/images/producktivo.png';\r\nimport { Container } from 'react-bootstrap';\r\n\r\nclass Carousel extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         items: [\r\n            {\r\n               id: 0,\r\n               title: 'ProDucktivo',\r\n               subTitle: 'Gamify Tasks!',\r\n               imgSrc: producktivo,\r\n               selected: false,\r\n               link: 'https://github.com/HoltPicklesimer/ProDucktivo',\r\n               link2: 'https://play.google.com/store/apps/details?id=com.pickleco.producktivo&hl=en_US&gl=US',\r\n               content:\r\n                  'ProDucktivo is a mobile android app I developed for my senior project using React Native, Expo CLI, and Firebase. Producktivo is a productivity app that ' +\r\n                  'gamifies tasks to give users more motivation to work on said tasks. Producktivo tracks task status, due dates, and when tasks are completed and started. ' +\r\n                  'Users can sign up for an account using their email and a password and all of their information and tasks are stored in a Firebase database. Users can view ' +\r\n                  'their tasks coming up within a month on the main task page, where they can also create new tasks, start and complete tasks, view individual task details, and ' +\r\n                  'delete tasks. Users can filter their tasks on the task page by tasks they still need to do, tasks not started, tasks started, tasks completed, or all tasks. ' +\r\n                  'When creating or editing a task, users can set the task difficulty to easy, medium, or hard, which determines the amount of points the user earns after completing ' +\r\n                  'the task. As users earn points for completing tasks, they grow in level, which can be viewed on their stats page. Users can view the total amount of time it ' +\r\n                  'takes to complete tasks and the average amount of time it takes for them to complete a single task on the stats page as well. From the settings page, users can ' +\r\n                  'reset their email and password or logout of the app. It is downloadable on the Google Play Store',\r\n            },\r\n            {\r\n               id: 1,\r\n               title: 'CareSource',\r\n               subTitle: 'Full-Time Internship',\r\n               imgSrc: careSource,\r\n               selected: false,\r\n               content:\r\n                  'While working at CareSource for the past year and a half, I worked on internal tools and bugfixes for the Enrollment team that handles incoming member records.' +\r\n                  'One project I have worked on was the Enrollment Engine Regression Testing Tool. I was the lead contributor for this tool that verifies the Enrollment Engine still works ' +\r\n                  'after integrating a change into the Enrollment Engine. This tool saves the Enrollment Team hundreds of hours a month in quality assurance work and has been used as a ' +\r\n                  'model for other regression tools in the company. I also created a dynamic mapping table to store component mappings and a configurations management UI to allow for easy ' +\r\n                  'creation and modification for Enrollment Team configurations for use of compliance management software.',\r\n            },\r\n            {\r\n               id: 2,\r\n               title: 'Ant Trail',\r\n               subTitle: 'An ASP.NET Core MVC Bug Tracker',\r\n               imgSrc: antTrail,\r\n               link: 'https://github.com/HoltPicklesimer/BugTracker2',\r\n               selected: false,\r\n               content:\r\n                  'A web application I created using ASP.NET Core MVC and Entity Framework. Users can register for an account, create projects and bug reports, and invite other users to their projects. Authentication was created using scaffolded Razor web pages. Unfortunately, this app is no longer available to view in browser as I was using a student subscription to an Azure database and my funds have been used up.',\r\n            },\r\n            {\r\n               id: 3,\r\n               title: 'Unity Game Development',\r\n               subTitle: 'Object-Oriented Programming in C#',\r\n               imgSrc: unity,\r\n               link: 'https://github.com/HoltPicklesimer/Unity-Space-Game',\r\n               selected: false,\r\n               content:\r\n                  'In my spare time, I enjoy creating games and learning game design in Unity. I often find new techniques to use in my professional work when I research solutions ' +\r\n                  'to my games. I created this 3D space shooter in a week during my spare time. I used 3D models from Star Wars, so unfortunately I cannot put all of the project on GitHub; ' +\r\n                  'however, the code is posted. In this program, I demonstrate object pooling using a custom object pooling class. Object pooling can help provide easy access to resources ' +\r\n                  'when it would otherwise be too costly. Please check out my other projects on GitHub: https://github.com/HoltPicklesimer where you can find the source code to my web ' +\r\n                  'applications and a gender classifier developed using the Keras and TensorFlow libraries.',\r\n            },\r\n            {\r\n               id: 4,\r\n               title: 'MegaDesk Application',\r\n               subTitle: 'A .NET Framework Desktop Application',\r\n               imgSrc: megaDesk,\r\n               link: 'https://github.com/HoltPicklesimer/MegaDesk-Picklesimer',\r\n               selected: false,\r\n               content:\r\n                  'This is a windows forms desktop application I created in collaboration with another teammate. The application is used to create and store price quotes for a fictional desk ' +\r\n                  'manufacturing company. Desk and quote specs are stored in a local file and can be viewed and filtered by surface material. C# and .NET were used to implement the functionality behind ' +\r\n                  'the windows forms.',\r\n            },\r\n            {\r\n               id: 5,\r\n               title: 'My Scripture Journal Application',\r\n               subTitle: 'A .NET Core Web Application',\r\n               imgSrc: scripture,\r\n               link: 'https://github.com/HoltPicklesimer/MyScriptureJournal',\r\n               selected: false,\r\n               content:\r\n                  \"This is a web application I created using Razor Web Pages and .NET Core. The application stores a user's scripture journal entries and the user can perform CRUD operations using \" +\r\n                  'the different pages. The entries are stored in a local database.',\r\n            },\r\n            {\r\n               id: 6,\r\n               title: 'Contoso University',\r\n               subTitle: 'A .NET Core MVC Web Application',\r\n               imgSrc: contoso,\r\n               link: 'https://github.com/HoltPicklesimer/ContosoUniversity',\r\n               selected: false,\r\n               content:\r\n                  'A web application I created as a learning project by following the Microsoft Contoso University tutorial that uses Entity Framework. Users can enroll students and add courses and departments. A few changes were made to the styling of the pages.',\r\n            },\r\n         ],\r\n      };\r\n   }\r\n\r\n   handleCardClick = (id, card) => {\r\n      let items = [...this.state.items];\r\n\r\n      items[id].selected = items[id].selected ? false : true;\r\n\r\n      items.forEach((item) => {\r\n         if (item.id !== id) {\r\n            item.selected = false;\r\n         }\r\n      });\r\n\r\n      this.setState({\r\n         items,\r\n      });\r\n   };\r\n\r\n   makeItems = (items) => {\r\n      return items.map((item) => {\r\n         return (\r\n            <Card\r\n               item={item}\r\n               click={(e) => this.handleCardClick(item.id, e)}\r\n               key={item.id}\r\n            />\r\n         );\r\n      });\r\n   };\r\n\r\n   render() {\r\n      return (\r\n         <Container fluid={true}>\r\n            <Row className='justify-content-around'>\r\n               {this.makeItems(this.state.items)}\r\n            </Row>\r\n         </Container>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Carousel;\r\n","import React from 'react';\r\nimport Hero from '../components/Hero';\r\nimport Carousel from '../components/Carousel';\r\n\r\nfunction HomePage(props) {\r\n   return (\r\n      <div>\r\n         <Hero\r\n            title={props.title}\r\n            subTitle={props.subTitle}\r\n            text={props.text}\r\n            img={props.img}\r\n         />\r\n         <Carousel />\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default HomePage;\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nfunction Content(props) {\r\n   return (\r\n      <Container fluid={true}>\r\n         <Row className='justify-content-center'>\r\n            <Col md={8}>{props.children}</Col>\r\n         </Row>\r\n      </Container>\r\n   );\r\n}\r\n\r\nexport default Content;\r\n","import React from 'react';\r\n\r\nimport Hero from '../components/Hero';\r\nimport Content from '../components/Content';\r\n\r\nfunction AboutPage(props) {\r\n   return (\r\n      <div>\r\n         <Hero title={props.title}></Hero>\r\n\r\n         <Content>\r\n            <p>\r\n               Hello, my name is Holt (Ethan) Picklesimer. I am a software\r\n               engineer currently working for Walmart. I obtained my BS in\r\n               Software engineering from Brigham Young University - Idaho April\r\n               2021. I have experience in C#, .NET, SQL, HTML, CSS, JavaScript,\r\n               TypeScript, PHP, C++, C, Java, and Python, among others.\r\n            </p>\r\n            <p>\r\n               I am currently a software developer for Walmart Global Tech as of\r\n               July 2021. I am part of the COSTL (Checkout Streamlined) team and\r\n               build features for a new POS (Point of Sale) system to replace\r\n               legacy checkout systems that associates use in-store. I\r\n               implemented the eWIC (Woman, Infants, Children) frontend payment\r\n               flow for the COSTL system to allow associates to select eWIC as\r\n               another payment option via card or handkey. While working for\r\n               Walmart, I have learned a great deal more of React, JavaScript,\r\n               Redux, Git, and configuration management, among others.\r\n            </p>\r\n            <p>\r\n               I worked as an application development intern on the Enrollment\r\n               Application Development Team at CareSource, a healthcare company\r\n               located in Dayton, OH, from May 2019 to July 2021. During my time\r\n               at CareSource, I have had the opportunity to work in a Scrum team\r\n               and learn how to do many of the processes of Agile, including\r\n               writing user stories and design documents, participating in\r\n               sprint plannings, retrospectives, and reviews. I was the main\r\n               contributor of the Enrollment Engine Regression Testing Tool,\r\n               which is used to verify existing code does not break when changes\r\n               are made to the Enrollment Engine code and has been used as a\r\n               model for other regression tools in the company. While working on\r\n               the regression tool, I used .NET Framework, Razor webpages, SQL,\r\n               Javascript and jQuery to create mock data to test the Enrollment\r\n               Engine. Besides the regression testing tool, I created a dynamic\r\n               mapping table to store configuration mappings, as well as a UI\r\n               for a configuration management system to allow for easy access to\r\n               creating and modifying compliance items.\r\n            </p>\r\n            <p>\r\n               As my senior project, I wanted to learn more about app\r\n               development, and specifically mobile development. I learned much\r\n               about React Native through the development of{' '}\r\n               <a\r\n                  href='https://play.google.com/store/apps/details?id=com.pickleco.producktivo&hl=en_US&gl=US'\r\n                  target='_blank'\r\n               >\r\n                  ProDucktivo\r\n               </a>\r\n               , a task tracker app that gamifies doing pretty much anything you\r\n               need to do.\r\n            </p>\r\n            <p>\r\n               In my school projects, I had the chance to work in a group with\r\n               two other teammates to develop a{' '}\r\n               <a\r\n                  href='https://github.com/HoltPicklesimer/Gender-Classification'\r\n                  target='_blank'\r\n               >\r\n                  neural network gender classifier\r\n               </a>\r\n               . I led the research for this project to test different layers in\r\n               a neural network using the Keras and TensorFlow Python libraries.\r\n               I also developed an image sorting program to prepare the data\r\n               before classification since it was sorted by name rather than by\r\n               gender. The program uses the labels file provided by the dataset\r\n               to sort each image into either a male or female folder. The\r\n               dataset used was the{' '}\r\n               <a href='http://vis-www.cs.umass.edu/lfw/' target='_blank'>\r\n                  Labeled Faces in the Wild\r\n               </a>{' '}\r\n               dataset, which contains more than 13,000 images. I collaborated\r\n               with over twenty other teammates to write a{' '}\r\n               <a\r\n                  href='https://github.com/HoltPicklesimer/Grad-Planner-Registration-Integration-Software-Requirements-Specification'\r\n                  target='_blank'\r\n               >\r\n                  software requirements specification\r\n               </a>{' '}\r\n               and a{' '}\r\n               <a\r\n                  href='https://github.com/HoltPicklesimer/Grad-Planner-Registration-Integration-Software-Design-Description'\r\n                  target='_blank'\r\n               >\r\n                  software design description\r\n               </a>{' '}\r\n               for an integrated graduation planner and class registration\r\n               system. I also collaborated in another twenty student team to\r\n               write a{' '}\r\n               <a\r\n                  href='https://github.com/HoltPicklesimer/Mobile-Dating-App-Specification'\r\n                  target='_blank'\r\n               >\r\n                  software design description\r\n               </a>{' '}\r\n               for a mobile dating app with a focus on the User Interface. I\r\n               have also worked on a few different{' '}\r\n               <a\r\n                  href='https://mighty-gorge-68223.herokuapp.com/Home/assigns.php'\r\n                  target='_blank'\r\n               >\r\n                  web apps\r\n               </a>{' '}\r\n               using PHP and Node.js\r\n            </p>\r\n            <p>\r\n               Please check out my{' '}\r\n               <a href='https://github.com/HoltPicklesimer' target='_blank'>\r\n                  GitHub\r\n               </a>{' '}\r\n               page and{' '}\r\n               <a\r\n                  href='https://www.linkedin.com/in/holt-picklesimer'\r\n                  target='_blank'\r\n               >\r\n                  LinkedIn\r\n               </a>\r\n               , and contact me using the contact page on this site, on\r\n               LinkedIn, at holtpicklesimer@gmail.com, or 234-281-6994.\r\n            </p>\r\n         </Content>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default AboutPage;\r\n","import React from 'react';\r\nimport emailjs from 'emailjs-com';\r\nimport Recaptcha from 'react-recaptcha-that-works';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport Hero from '../components/Hero';\r\nimport Content from '../components/Content';\r\n\r\nclass ContactPage extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n\r\n      // Different binding method, both are valid\r\n      this.checkVerified = this.checkVerified.bind(this);\r\n      this.verifyCallback = this.verifyCallback.bind(this);\r\n      this.expireCallback = this.expireCallback.bind(this);\r\n\r\n      this.state = {\r\n         from_name: '',\r\n         from_email: '',\r\n         message: '',\r\n         disabled: false,\r\n         emailSent: null,\r\n         isVerified: false,\r\n      };\r\n   }\r\n\r\n   handleChange = (event) => {\r\n      const target = event.target;\r\n      const value = target.type === 'checkbox' ? target.checked : target.value;\r\n      const name = target.name;\r\n\r\n      this.setState({\r\n         [name]: value,\r\n      });\r\n   };\r\n\r\n   handleSubmit = (event) => {\r\n      this.setState({\r\n         disabled: true,\r\n      });\r\n\r\n      emailjs\r\n         .sendForm(\r\n            'gmail',\r\n            'portfolio',\r\n            event.target,\r\n            'user_qKi3RpI6gqF7Y7UDjciy6'\r\n         )\r\n         .then(\r\n            (res) => {\r\n               if (res) {\r\n                  this.setState({\r\n                     disabled: true,\r\n                     emailSent: true,\r\n                  });\r\n               } else {\r\n                  this.setState({\r\n                     disabled: true,\r\n                     emailSent: false,\r\n                  });\r\n               }\r\n            },\r\n            (err) => {\r\n               console.log(err);\r\n\r\n               this.setState({\r\n                  disabled: true,\r\n                  emailSent: false,\r\n               });\r\n            }\r\n         );\r\n   };\r\n\r\n   expireCallback() {\r\n      alert('Captcha verification expired. Please re-verify.');\r\n   }\r\n\r\n   checkVerified(event) {\r\n      event.preventDefault();\r\n\r\n      if (this.state.isVerified) {\r\n         this.handleSubmit(event);\r\n      } else {\r\n         alert('Please verify the recaptcha before submitting.');\r\n      }\r\n   }\r\n\r\n   verifyCallback(response) {\r\n      if (response) {\r\n         this.setState({ isVerified: true });\r\n      }\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div>\r\n            <Hero title={this.props.title} />\r\n\r\n            <Content>\r\n               <Form onSubmit={this.checkVerified}>\r\n                  <Form.Group>\r\n                     <Form.Label htmlFor='full-name'>Full Name</Form.Label>\r\n                     <Form.Control\r\n                        id='full-name'\r\n                        name='from_name'\r\n                        type='text'\r\n                        value={this.state.from_name}\r\n                        onChange={this.handleChange}\r\n                     />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group>\r\n                     <Form.Label htmlFor='email'>Email</Form.Label>\r\n                     <Form.Control\r\n                        id='email'\r\n                        name='from_email'\r\n                        type='email'\r\n                        value={this.state.from_email}\r\n                        onChange={this.handleChange}\r\n                     />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group>\r\n                     <Form.Label htmlFor='message'>Message</Form.Label>\r\n                     <Form.Control\r\n                        id='message'\r\n                        name='message'\r\n                        as='textarea'\r\n                        rows='3'\r\n                        value={this.state.message}\r\n                        onChange={this.handleChange}\r\n                     />\r\n                  </Form.Group>\r\n\r\n                  <Recaptcha\r\n                     className='recaptcha'\r\n                     siteKey='6LcvCdMZAAAAADt8iHKTJY-0ikSHIKrtC-UbyKbj'\r\n                     onVerify={this.verifyCallback}\r\n                     onExpire={this.expireCallback}\r\n                  />\r\n                  <br />\r\n\r\n                  <Button\r\n                     className='d-inline-block'\r\n                     variant='primary'\r\n                     type='submit'\r\n                     disabled={this.state.disabled}\r\n                  >\r\n                     Send\r\n                  </Button>\r\n\r\n                  {this.state.emailSent === true && (\r\n                     <p className='d-inline success-msg'>Email Sent</p>\r\n                  )}\r\n                  {this.state.emailSent === false && (\r\n                     <p className='d-inline err-msg'>Email Not Sent</p>\r\n                  )}\r\n               </Form>\r\n            </Content>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default ContactPage;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport './App.css';\n\nimport Footer from './components/Footer';\nimport HomePage from './pages/HomePage';\nimport AboutPage from './pages/AboutPage';\nimport ContactPage from './pages/ContactPage';\n\nimport profile from './assets/images/profile.JPG';\n\nclass App extends React.Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         title: 'Holt Picklesimer',\n         headerLinks: [\n            { title: 'Home', path: '/' },\n            { title: 'About', path: '/about' },\n            { title: 'Contact', path: '/contact' },\n         ],\n         home: {\n            title: 'Holt Picklesimer',\n            subTitle: 'Software Engineering BS',\n            text: 'Checkout my projects below.',\n         },\n         about: {\n            title: 'About Me',\n            subTitle: 'Software Engineering BS',\n            text: 'Checkout my projects below.',\n         },\n         contact: {\n            title: \"Let's Talk\",\n         },\n      };\n   }\n\n   render() {\n      return (\n         <Router>\n            <Container className='p-0' fluid={true}>\n               <Navbar className='border-bottom' bg='transparent' expand='lg'>\n                  <Navbar.Brand>Holt Picklesimer</Navbar.Brand>\n\n                  <Navbar.Toggle\n                     className='border-0'\n                     aria-controls='navbar-toggle'\n                  />\n                  <Navbar.Collapse id='navbar-toggle'>\n                     <Nav className='ml-auto'>\n                        <Link className='nav-link' to='/portfolio'>\n                           Home\n                        </Link>\n                        <Link className='nav-link' to='/About'>\n                           About\n                        </Link>\n                        <Link className='nav-link' to='/Contact'>\n                           Contact\n                        </Link>\n                     </Nav>\n                  </Navbar.Collapse>\n               </Navbar>\n\n               <Route\n                  path='/portfolio'\n                  exact\n                  render={() => (\n                     <HomePage\n                        title={this.state.home.title}\n                        subTitle={this.state.home.subTitle}\n                        text={this.state.home.text}\n                        img={profile}\n                     />\n                  )}\n               />\n               <Route\n                  path='/About'\n                  render={() => (\n                     <AboutPage\n                        title={this.state.about.title}\n                        subTitle={this.state.about.subTitle}\n                        text={this.state.about.text}\n                     />\n                  )}\n               />\n               <Route\n                  path='/Contact'\n                  render={() => (\n                     <ContactPage\n                        title={this.state.contact.title}\n                        subTitle={this.state.contact.subTitle}\n                        text={this.state.contact.text}\n                     />\n                  )}\n               />\n               <Footer></Footer>\n            </Container>\n         </Router>\n      );\n   }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}